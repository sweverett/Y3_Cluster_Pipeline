[runtime]
; The test sampler just runs a single parameter set
sampler = test
root = ${COSMOSIS_SRC_DIR}

[test]
; These are the parameters for this sampler.
; In this case there is just one parameter
save_dir=clusters_test

; If something goes wrong this will aid diagnosis
fatal_errors=T

; The pipeline section contains information
; that describes the sequence of calculations
; to be done and what we want out at the end
[pipeline]
; The list of modules to be run, in this order.
; The modules named here must appear as sections below
;modules = y3_data_prep y3_gammat y3_likelihood
modules =  y3_gammat y3_likelihood

; The file to get cosmological and nuisance parameters from.
values = cosmosis-standard-library/clusters/y3_pipeline_values.ini
; Not used here, becuase we are not sampling
likelihoods = 
extra_output = 
quiet=F
debug=T
timing=F

[y3_data_prep]
file = cosmosis-standard-library/clusters/y3_data_prep.py
data_vector_name = ../likelihood/y3_cluster/test/test_cluster.fits

[y3_gammat]
file = cosmosis-standard-library/clusters/y3_gammat.py

; Set the distribution models you would like to use
; For distribution name definitions, see the overleaf document:
; https://www.overleaf.com/13697016cyvvqqfchfbg#/52989522/
mor = dumb_mor
lo_lc = dumb_lo_lc
lc_lt = dumb_lc_lt
roffset = dumb_roffset
a_cen = dumb_a_cen
a_mis = dumb_a_mis
zo_zt = dumb_zo_zt

; Additional functional definitions
; (will likely have defaults eventually)
del_sig_cen = dumb_delta_sigma_cen
del_sig_mis = dumb_delta_sigma_mis
T_cen = dumb_T_cen
T_mis = dumb_T_mis
hmf = dumb_hmf

[y3_likelihood]
file = cosmosis-standard-library/clusters/y3_likelihood.py
